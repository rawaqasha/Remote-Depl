#eSc workflow with 3 real block def deployed in 3 containers to zip a file 

tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1/types.yaml
  - https://raw.githubusercontent.com/rawaqasha/e-sc-cloudify/master/esc_nodetypes.yaml
  
inputs:

  input-dir:
      description: >
        The dir path of the input files  
      default: '~/input'

  input-file:
      description: >
        input file for importFile1
      default: file.jpg

  docker-image: 
      description: > 
        Docker image to be used for container building
      default: 'ubuntu:14.04'

  create_image:
      description: > 
        an option to create Docker images
      default: 'False'

node_types:

  docker_container:
    derived_from: cloudify.nodes.Root
    properties:
      image_name:
        type: string
        default: { get_input: docker-image } 
      container_ID:
        type: string
        default: container1

node_templates:

  host:
    type: cloudify.nodes.Compute
    properties:
      ip: localhost
      install_agent: false

  starterBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Core-LifecycleScripts/start-inhost.sh
          inputs:
            process:
              args: [FileZip]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

  container1:
    type: docker_container
    properties:
      container_ID: container1
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Core-LifecycleScripts/container.sh
          inputs:
            process:
              args: [FileZip]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: starterBlock

  Java:
    type: spec_library
    properties:
      lib_name: default-jdk
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/java-install2.sh
          inputs:
            process:
              args: [container1, FileZip]
    relationships:
      - type: cloudify.relationships.depends_on
        target: container1
      - type: cloudify.relationships.contained_in
        target: container1

  ImportFile:
    type: importfile
    properties:
      block_description: import file
      block_name: importfile1.jar
      block_category: File Management
      service_type: block
      Source: { get_input: input-file }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Core-LifecycleScripts/task-download-multi.sh
          inputs:
            process:
             args: [{ get_input: create_image }, container1, 'https://github.com/rawaqasha/eScBlocks-host/raw/master/importfile1.jar']
        configure:
          implementation: scripts/get-input.sh
          inputs:
            process:
             args: [FileZip, container1, { get_input: input-dir }, { get_input: input-file }]
        start: 
          implementation: Core-LifecycleScripts/task-deploy.sh
          inputs:
            process:
             args: [FileZip, container1, { get_input: input-file }]
    relationships:
      - type: cloudify.relationships.contained_in
        target: container1
      - type: cloudify.relationships.depends_on
        target: Java

  container2:
    type: docker_container
    properties:
      container_ID: container2
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: Core-LifecycleScripts/container.sh
          inputs:
            process:
              args: [FileZip]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: ImportFile

  Java2:
    type: spec_library
    properties:
      lib_name: default-jdk
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/java-install2.sh
          inputs:
            process:
              args: [container2, FileZip]
    relationships:
      - type: cloudify.relationships.contained_in
        target: container2

  ZipFile:
    type: zipFile
    properties:
      block_description: invert the column of csv file
      block_name: filezip2.jar
      block_category: File Management
      service_type: block
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Core-LifecycleScripts/task-download-multi.sh
          inputs:
            process:
             args: [{ get_input: create_image }, container2, 'https://github.com/rawaqasha/eScBlocks-host/raw/master/filezip2.jar']
        configure:
          implementation: Core-LifecycleScripts/containers-clean.sh
          inputs:
            process:
             args: [container1]
        start: 
          implementation: Core-LifecycleScripts/task-deploy.sh
          inputs:
            process:
             args: [FileZip, container2, rawa1975]
    relationships:
      - type: cloudify.relationships.contained_in
        target: container2
      - type: cloudify.relationships.depends_on
        target: Java2
      - type: block_link
        target: ImportFile
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: Core-LifecycleScripts/datacopy.sh
              inputs:
                process:
                  args: [ImportFile/output-1, ZipFile/input-1, FileZip, container2]

  container3:
    type: docker_container
    properties:
      container_ID: container3
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: Core-LifecycleScripts/container.sh
          inputs:
            process:
              args: [FileZip]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: ZipFile

  Java3:
    type: spec_library
    properties:
      lib_name: default-jdk
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/java-install2.sh
          inputs:
            process:
              args: [container3, FileZip]
    relationships:
      - type: cloudify.relationships.contained_in
        target: container3
        
  ExportFiles:
    type: exportfiles
    properties:
      block_description: export files
      block_name: exportfiles1.jar
      block_category: File Management
      service_type: block
    relationships:
      - type: cloudify.relationships.contained_in
        target: container3
      - type: block_link
        target: ZipFile
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure:
              implementation: Core-LifecycleScripts/datacopy.sh
              inputs:
                process:
                  args: [ZipFile/output-1, ExportFiles/file-list, FileZip, container3]
      - type: cloudify.relationships.depends_on
        target: Java3
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: Core-LifecycleScripts/task-download-multi.sh
          inputs:
            process:
             args: [{ get_input: create_image }, container3, 'https://github.com/rawaqasha/eScBlocks-host/raw/master/exportfiles1.jar']
        configure:
          implementation: Core-LifecycleScripts/containers-clean.sh
          inputs:
            process:
             args: [container2]
        start: 
          implementation: Core-LifecycleScripts/task-deploy.sh
          inputs:
            process:
             args: [FileZip, container3]

  finalBlock:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:        
        configure:
          implementation: Core-LifecycleScripts/containers-clean.sh
          inputs:
            process:
              args: [container3]
        create:
          implementation: Core-LifecycleScripts/final-inhost.sh
          inputs:
            process:
              args: [FileZip]
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: cloudify.relationships.depends_on
        target: ExportFiles
